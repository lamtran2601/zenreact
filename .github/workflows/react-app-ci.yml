name: React-app CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'packages/react-app/**'
      - '.github/workflows/react-app-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'packages/react-app/**'
      - '.github/workflows/react-app-ci.yml'

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/workflows/setup@main
        with:
          install-dependencies: true
          filter-packages: '@zenreact/react-app'

  validate:
    name: Validate Pattern Compliance
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/react-app
    steps:
      - name: Run pattern validation
        run: pnpm run validate:patterns
      - name: Check pattern annotations
        run: pnpm run validate:annotations

  lint:
    name: Lint and Type Check
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/react-app
    steps:
      - name: Run ESLint
        run: pnpm run lint
      - name: Run TypeScript check
        run: pnpm run typecheck

  test:
    name: Run Tests
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/react-app
    steps:
      - name: Run unit tests
        run: pnpm run test:unit
      - name: Run integration tests
        run: pnpm run test:integration
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    name: End-to-End Tests
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/react-app
    steps:
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps
      - name: Run E2E tests
        run: pnpm run test:e2e
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: packages/react-app/playwright-report/
          retention-days: 30

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [validate, lint, test]
    defaults:
      run:
        working-directory: packages/react-app
    steps:
      - uses: actions/checkout@v4
      - name: Setup Environment
        uses: ./.github/workflows/setup@main
        with:
          install-dependencies: true
          filter-packages: '@zenreact/react-app'
      - name: Build application
        run: pnpm run build
      - name: Run performance checks
        run: pnpm run perf:check
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: packages/react-app/dist/
          retention-days: 7

  # deploy:
  #   name: Deploy (Preview)
  #   if: github.event_name == 'pull_request'
  #   runs-on: ubuntu-latest
  #   needs: [build, e2e]
  #   environment:
  #     name: preview
  #     url: ${{ steps.deploy.outputs.preview-url }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build
  #         path: packages/react-app/dist
  #     - name: Deploy to preview
  #       id: deploy
  #       run: echo "Would deploy to preview environment"

  # deploy-production:
  #   name: Deploy (Production)
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   needs: [build, e2e]
  #   environment:
  #     name: production
  #     url: https://football-tickets.example.com
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build
  #         path: packages/react-app/dist
  #     - name: Deploy to production
  #       run: echo "Would deploy to production environment"
